<!DOCTYPE html>
<html>
<head>
  <title>Simple Map with Points of Interest</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==" crossorigin=""/>
  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js" integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==" crossorigin=""></script>
  <!-- Add Leaflet Routing Machine plugin -->
<link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@3.2.12/dist/leaflet-routing-machine.css" />
<script src="https://unpkg.com/leaflet-routing-machine@3.2.12/dist/leaflet-routing-machine.js"></script>

  
  <style>
    html, body, #map {
      height: 100%;
      margin: 0;
      padding: 0;
    }
  </style>
</head>
<body>
  <div id="map"></div>
  <script>
    // Initialize the map and set view to the location of AKMI AVT in Piraeus, Greece
    var map = L.map('map').setView([37.9409, 23.6474], 17);

    // Add OpenStreetMap tile layer to the map
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // Custom marker icon for point of interest
    var poiIcon = L.icon({
      iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',
      shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
      iconSize: [25, 41],
      iconAnchor: [12, 41],
      shadowSize: [41, 41],
      shadowAnchor: [12, 41],
      popupAnchor: [1, -34]
    });

    // Custom marker icon for user location
    var userIcon = L.icon({
      iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-gold.png',
      shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
      iconSize: [25, 41],
      iconAnchor: [12, 41],
      shadowSize: [41, 41],
      shadowAnchor: [12, 41],
      popupAnchor: [1, -34]
    });

    // Define the point of interest
    var pointOfInterest = {
      name: 'AKMI AVT',
 

      description: 'AKMI AVT in Piraeus, Greece, on Sotiros Street',
      lat: 37.9409,
      lng: 23.6474
    };

    // Add a marker with custom icon for the point of interest
    var marker = L.marker([pointOfInterest.lat, pointOfInterest.lng], {icon: poiIcon}).addTo(map);
    marker.bindPopup('<h3>' + pointOfInterest.name + '</h3><p>' + pointOfInterest.description + '</p>');

    
// Function to display user's location on the map with a custom icon and draw a route to the point of interest
async function displayUserLocation(position) {
  var userLat = position.coords.latitude;
  var userLng = position.coords.longitude;
  var userMarker = L.marker([userLat, userLng], {icon: userIcon}).addTo(map);
  userMarker.bindPopup('<h3>Your Location</h3>');
  map.setView([userLat, userLng], 17);

  // Fetch route from OpenRouteService API
  var apiKey = '5b3ce3597851110001cf62483555d9e0b1174a29be015c61d1333a38'; // Your OpenRouteService API key
  var routeUrl = `https://api.openrouteservice.org/v2/directions/driving-car?api_key=${apiKey}&start=${userLng},${userLat}&end=${pointOfInterest.lng},${pointOfInterest.lat}`;
  var response = await fetch(routeUrl);
  var routeData = await response.json();

  if (routeData.features && routeData.features.length > 0) {
    // Draw route on the map
    var coordinates = routeData.features[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);
    var routeLine = L.polyline(coordinates, {color: 'red'}).addTo(map);
  } else {
    alert("Error: Unable to fetch route.");
  }
}
// ...

// Check if the browser supports the Geolocation API
if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(displayUserLocation, function (error) {
    alert("Error: Unable to retrieve your location. Please allow location access and try again.");
  });
} else {
  alert("Error: Your browser does not support geolocation.");
}

  </script>
</body>
</html>



